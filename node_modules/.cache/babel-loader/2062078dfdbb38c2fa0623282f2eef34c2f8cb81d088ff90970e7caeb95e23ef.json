{"ast":null,"code":"var _jsxFileName = \"/home/manojkrishna/Desktop/DevClass/Portfolio/my-app/src/Typing.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Typing({\n  text,\n  typingSpeed = 100,\n  deletingSpeed = 50\n}) {\n  _s();\n  const [displayText, setDisplayText] = useState('');\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [index, setIndex] = useState(0);\n  useEffect(() => {\n    const handleTyping = () => {\n      if (!isDeleting) {\n        if (displayText.length < text[index].length) {\n          setDisplayText(prev => prev + text[index].charAt(prev.length));\n        }\n      }\n    };\n    const timeout = setTimeout(handleTyping, isDeleting ? deletingSpeed : typingSpeed);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"typing-effect\",\n    children: [\"text\", /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"caret\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(Typing, \"q38ftQTZKhWxNnR3j7clex6XWLI=\");\n_c = Typing;\nexport default Typing;\nvar _c;\n$RefreshReg$(_c, \"Typing\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Typing","text","typingSpeed","deletingSpeed","_s","displayText","setDisplayText","isDeleting","setIsDeleting","index","setIndex","handleTyping","length","prev","charAt","timeout","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/manojkrishna/Desktop/DevClass/Portfolio/my-app/src/Typing.js"],"sourcesContent":["import {useEffect, useState} from \"react\";\nfunction Typing({\n    text,\n    typingSpeed = 100,\n    deletingSpeed = 50\n}) {\n    const [displayText, setDisplayText] = useState('');\n    const [isDeleting, setIsDeleting] = useState(false);\n    const [index,setIndex] = useState(0);\n    useEffect(() => {\n        const handleTyping = () => {\n            if(!isDeleting){\n                if(displayText.length < text[index].length){\n                    setDisplayText((prev) => prev + text[index].charAt(prev.length));\n                }\n            }\n        };\n\n        const timeout = setTimeout(\n            handleTyping,\n            isDeleting ? deletingSpeed : typingSpeed\n        ); \n    })\n    return (\n        <div className=\"typing-effect\">\n            text\n            <span className=\"caret\"></span>\n        </div>\n    );\n}\n\nexport default Typing;"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1C,SAASC,MAAMA,CAAC;EACZC,IAAI;EACJC,WAAW,GAAG,GAAG;EACjBC,aAAa,GAAG;AACpB,CAAC,EAAE;EAAAC,EAAA;EACC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACY,KAAK,EAACC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACpCD,SAAS,CAAC,MAAM;IACZ,MAAMe,YAAY,GAAGA,CAAA,KAAM;MACvB,IAAG,CAACJ,UAAU,EAAC;QACX,IAAGF,WAAW,CAACO,MAAM,GAAGX,IAAI,CAACQ,KAAK,CAAC,CAACG,MAAM,EAAC;UACvCN,cAAc,CAAEO,IAAI,IAAKA,IAAI,GAAGZ,IAAI,CAACQ,KAAK,CAAC,CAACK,MAAM,CAACD,IAAI,CAACD,MAAM,CAAC,CAAC;QACpE;MACJ;IACJ,CAAC;IAED,MAAMG,OAAO,GAAGC,UAAU,CACtBL,YAAY,EACZJ,UAAU,GAAGJ,aAAa,GAAGD,WACjC,CAAC;EACL,CAAC,CAAC;EACF,oBACIH,OAAA;IAAKkB,SAAS,EAAC,eAAe;IAAAC,QAAA,GAAC,MAE3B,eAAAnB,OAAA;MAAMkB,SAAS,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEd;AAAClB,EAAA,CA5BQJ,MAAM;AAAAuB,EAAA,GAANvB,MAAM;AA8Bf,eAAeA,MAAM;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}